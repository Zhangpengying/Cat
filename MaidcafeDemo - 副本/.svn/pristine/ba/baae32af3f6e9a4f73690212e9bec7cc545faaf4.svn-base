using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class OpenStore : MonoBase
{
    public static bool arriveStore = false;
    private string msgInfor;
    private Player player;
    public int ID = 400;
    private Hashtable infor = new Hashtable();
    // Use this for initialization
    void Start()
    {
        EventManager.instance.RegisterReceiver(this);
        //事件信息记录
       
        infor.Add("Name", transform.parent.name);

        //注册事件
        StaticVar.AddEvents(ID, infor);
    }

    // Update is called once per frame
    void Update () {
        if (arriveStore)
        {
            //显示提示符
            if (GameObject.Find("Environment/Events/Tips") == null)
            {
                GameObject.Find("UI").GetComponent<GlobalVariable>().ActiveTips();

            }
            else
            {
                if (Input.GetKeyDown(KeyCode.Z))
                {
                    //进入互动
                    if (!player.IsLockPlayer)
                    {
                        StaticVar.StartInteraction();
                        StaticVar.InteractiveProp.transform.Find("BG").GetComponent<SpriteRenderer>().flipX = !player.GetComponent<SpriteRenderer>().flipX;
                        TimerManager.instance.Invoke(0.01f, delegate { WindowManager.instance.Open<SellWnd>().Initialize(); });

                    }
                }
            }
        }
    }

    public override void ReciveMessage(Message msg)
    {
        base.ReciveMessage(msg);
        player = msg.Content as Player;
        if (msg.Command == MyMessageType.Event_OpenStore)
        {
            if (StaticVar.PreferenceEvent(ID))
            {
                arriveStore = true;
            }
            
            
        }
        else if(msg.Command == MyMessageType.Event_LeaveStore)
        {
            arriveStore = false;
            if (GameObject.Find("Environment/Events/Tips") != null)
            {
                Destroy(GameObject.Find("Environment/Events/Tips"));
            }
            MessageSend.instance.triggerEventID.Remove(ID);
        }
    }
}
